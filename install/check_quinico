#!/usr/bin/python

#
# Copyright 2012 - Tom Alessi
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


"""Quinico Nagios Plugin


"""


import datetime
import json
import urllib
from optparse import OptionParser


def webmaster_total():
    """Query Quinico for webmaster total crawl errors"""

    url = 'http://%s/webmaster/total?domain=%s&format=json' % (options.quinico,options.domain)
    if options.debug:
        print 'Executing webmaster_total for %s' % options.domain

    try:
        request = urllib.urlopen(url)
    except Exception, e:
        print 'CRITICAL - Error occurred querying Quinico API:%s' % e
        exit(2)

    response = request.read()
    request.close()


    # Date we are looking for (always today unless overridden)
    now = datetime.datetime.today().strftime("%Y-%m-%d")

    raw_json = json.loads(response)
    print raw_json['data']['values'][now]


def seomoz_metric():
    """Query Quinico for seomoz metrics"""

    url = 'http://%s/seomoz/trends?url=%s&metric=%s&format=json' % (options.quinico,options.domain,options.metric)
    if options.debug:
        print 'Executing seomoz_metric for %s with metric %s' % (options.domain,options.metric)

    try:
        request = urllib.urlopen(url)
    except Exception, e:
        print 'CRITICAL - Error occurred querying Quinico API:%s' % e
        exit(2)

    response = request.read()
    request.close()


    raw_json = json.loads(response)
    print raw_json['data']['values'][now]


#
#
# BEGIN MAIN PROGRAM EXECUTION
#


parser = OptionParser(description='Quinico Nagios Plugin', version='%prog 1.0')
parser.add_option("-c", "--command", dest="command", help="Command to run")
parser.add_option("-d", "--domain", dest="domain", help="Domain to check")
parser.add_option("-m", "--metric", dest="metric", help="Metric to check")
parser.add_option("-q", "--quinico", dest="quinico", help="Quinico Server Fully Qualified Host Name")
parser.add_option('--debug',
                  action='store_true',
                  dest='debug',
                  default=False,
                  help='Print debug messages to standard out')
(options, args) = parser.parse_args()

# Run the requested command
if options.command == 'webmaster_total':
    webmaster_total()
elif options.command == 'seomoz_metric':
    seomoz_metric()
else:
    if options.debug:
        print 'invalid command'

# If we got this far, there was an error
exit(2)
